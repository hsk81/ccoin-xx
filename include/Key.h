/* 
 * File:   Key.h
 * Author: hsk81
 */

#ifndef KEY_H
#define KEY_H

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

#include <openssl/ec.h>
#include <glib.h>

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

struct key {
    EC_KEY *ec_key;
};

namespace Key {
    gboolean init(struct key *key);
    void free(struct key *key);
    gboolean generate(struct key *key);
    gboolean get_public(struct key *key, gpointer *pointer, gsize *size);
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

struct keyset {
    GHashTable *pubkey;
    GHashTable *pubkey_hash; //RIPEMD160
};

namespace Keyset {
    void init(struct keyset *keyset);
    void free(struct keyset *keyset);
    gboolean add(struct keyset *keyset, struct key *key);
    gboolean lookup(
            const struct keyset *keyset, gconstpointer data, gsize size,
            gboolean is_hash);
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

#endif /* KEY_H */
