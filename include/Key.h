/* 
 * File:   Key.h
 * Author: hsk81
 *
 * Created on February 1, 2014, 1:42 PM
 */

#ifndef KEY_H
#define	KEY_H

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

#include <openssl/ec.h>
#include <glib.h>

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

struct key {
	EC_KEY *ec_key;
};

namespace Key {
    bool init(struct key *key);
    void free(struct key *key);
    bool generate(struct key *key);
    bool get_public(struct key *key, void **pointer, size_t *length);
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

struct keyset {
	GHashTable	*pubkey;
	GHashTable	*pubkey_hash; //RIPEMD160
};

namespace Keyset {
    void init(struct keyset *keyset);
    void free(struct keyset *keyset);
    bool add(struct keyset *keyset, struct key *key);
    bool lookup(const struct keyset *keyset, const void *data, size_t length,
        bool is_hash);
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

#endif	/* KEY_H */
